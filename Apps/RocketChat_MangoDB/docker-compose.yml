# Nom du projet Docker Compose
name: rocketchat

services:
  # Service pour le serveur MongoDB dédié à RocketChat
  mongo_rocketchat:
    image: mongo:latest                            # Image officielle MongoDB
    container_name: mongo_rocketchat               # Nom du conteneur
    restart: unless-stopped                        # Redémarrage automatique
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin          # Utilisateur root MongoDB
      - MONGO_INITDB_ROOT_PASSWORD=admin          # Mot de passe root MongoDB
    volumes:
      - type: bind
        source: /DATA/AppData/$AppID/mongodb       # Stockage persistant sur l'hôte
        target: /data/db                          # Point de montage dans le conteneur
    expose:
      - 27017                                     # Port MongoDB (interne uniquement)
    # Vérification de la santé du service
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      pcs: null                                   # Connexion au réseau partagé

  # Service pour RocketChat
  rocketchat:
    image: rocketchat/rocket.chat:latest          # Image officielle RocketChat
    container_name: rocketchat                    # Nom du conteneur
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://admin:admin@mongo_rocketchat:27017/rocketchat?authSource=admin
      - MONGO_OPLOG_URL=mongodb://admin:admin@mongo_rocketchat:27017/local?authSource=admin
      - ROOT_URL=http://localhost:3000            # URL de base
      - ADMIN_USERNAME=admin                      # Utilisateur admin par défaut
      - ADMIN_PASS=admin123                       # Mot de passe admin
      - ADMIN_EMAIL=admin@example.com             # Email admin
    ports:
      - target: 3000                             # Port interne
        published: "3000"                        # Port exposé sur l'hôte
        protocol: tcp
    depends_on:
      mongo_rocketchat:
        condition: service_healthy               # Attendre que MongoDB soit prêt
    networks:
      pcs: null

# Définition du réseau partagé
networks:
  pcs:
    name: pcs

# Configuration spécifique à CasaOS
x-casaos:
  architectures:
    - amd64
    - arm64
  main: rocketchat                               # Service principal (interface utilisateur)
  author: UgEff
  category: Communication
  description:
    en_us: Rocket.Chat - A self-hosted chat platform for teams and communities.
  developer: Rocket.Chat
  tagline:
    en_us: A powerful open-source chat solution for teams.
  title:
    en_us: Rocket.Chat
  index: /
  port_map: "3000"
  volumes:                                       # Déclaration explicite des volumes
    - /DATA/AppData/$AppID/mongodb
