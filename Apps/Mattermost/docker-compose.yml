name: mattermost

services:
  postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    user: $PUID:$PGID
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    volumes:
      - /DATA/AppData/$AppID/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: mmuser
      POSTGRES_PASSWORD: $default_pwd
      POSTGRES_DB: mattermost
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mmuser -d mattermost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mattermost-net

  mattermost:
    image: mattermost/mattermost-team-edition:9.11.0
    user: $PUID:$PGID
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    expose:
      - 80
    volumes:
      - /DATA/AppData/$AppID/config:/mattermost/config
      - /DATA/AppData/$AppID/data:/mattermost/data
      - /DATA/AppData/$AppID/logs:/mattermost/logs
      - /DATA/AppData/$AppID/plugins:/mattermost/plugins
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: postgres://mmuser:$default_pwd@postgres:5432/mattermost?sslmode=disable&connect_timeout=10
      MM_SERVICESETTINGS_SITEURL: https://$domain
      MM_SERVICESETTINGS_WEBSOCKETURL: wss://$domain
      MM_SERVICESETTINGS_LISTENADDRESS: ":80"
      MM_SERVICESETTINGS_ENABLELOCALMODE: false
      MM_SERVICESETTINGS_ALLOWCORSFROM: "https://$domain"
      MM_SERVICESETTINGS_CORSEXPOSEDHEADERS: ""
      MM_SERVICESETTINGS_CORSALLOWCREDENTIALS: false
      MM_SERVICESETTINGS_CORSDEBUG: false
      
      MM_PLUGINSETTINGS_ENABLE: true
      MM_PLUGINSETTINGS_ENABLEUPLOADS: true
      MM_PLUGINSETTINGS_AUTOMATICPREPACKAGEDPLUGINS: true
      
      # Calls 플러그인 설정 (음성/화상 통화)
      MM_PLUGINSETTINGS_ENABLEREMOTEMARKETPLACE: true
      MM_PLUGINSETTINGS_ENABLEMARKETPLACE: true
      
      MM_TEAMSETTINGS_ENABLETEAMCREATION: true
      MM_TEAMSETTINGS_ENABLEUSERCREATION: true
      
      MM_FILESETTINGS_MAXFILESIZE: 52428800
      
      # 이메일 설정 (필요시 활성화)
      MM_EMAILSETTINGS_SENDEMAILNOTIFICATIONS: false
      MM_EMAILSETTINGS_SMTPSERVER: ""
      MM_EMAILSETTINGS_SMTPPORT: "587"
      MM_EMAILSETTINGS_SMTPUSERNAME: ""
      MM_EMAILSETTINGS_SMTPPASSWORD: ""
      MM_EMAILSETTINGS_ENABLESMTPAUTH: true
      MM_EMAILSETTINGS_CONNECTIONSECURITY: "STARTTLS"
      MM_EMAILSETTINGS_FEEDBACKNAME: "Mattermost"
      MM_EMAILSETTINGS_FEEDBACKEMAIL: ""
      MM_EMAILSETTINGS_REPLYTOADDRESS: ""
      MM_EMAILSETTINGS_ENABLEPREVIEWMODEBANNER: true
      
      # WebSocket 및 실시간 설정
      MM_SERVICESETTINGS_ENABLEDEVELOPER: false
      MM_SERVICESETTINGS_ENABLETESTING: false
      MM_SERVICESETTINGS_WEBSOCKETPORT: 80
      MM_SERVICESETTINGS_WEBSOCKETSECUREPORT: 443
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/api/v4/system/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s
    networks:
      - mattermost-net

networks:
  mattermost-net:
    driver: bridge

x-casaos:
  architectures: [amd64, arm64]
  main: mattermost
  webui_port: 80
  author: Yundera Team
  category: Communication
  developer: Mattermost, Inc.
  icon: https://cdn.jsdelivr.net/gh/Yundera/AppStore@main/Apps/Mattermost/icon.png
  tagline:
    en_us: Team chat and collaboration
    ko_kr: 팀 채팅 및 협업
  title:
    en_us: Mattermost
    ko_kr: Mattermost
  index: /
  port_map: "80"
  store_app_id: mattermost
  pre_install_cmd: |
    mkdir -p /DATA/AppData/$AppID/{config,data,logs,plugins,postgres} &&
    chown -R $PUID:$PGID /DATA/AppData/$AppID &&
    echo "Mattermost setup completed"