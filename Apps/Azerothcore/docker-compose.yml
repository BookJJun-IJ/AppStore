name: azerothcore

services:
  database:
    image: mysql:8.4
    user: $PUID:$PGID
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
    environment:
      MYSQL_ROOT_PASSWORD: $default_pwd
      MYSQL_USER: acore
      MYSQL_PASSWORD: $default_pwd
      MYSQL_DATABASE: acore_auth
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - /DATA/AppData/$AppID/database:/var/lib/mysql
      - /DATA/AppData/$AppID/mysql-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=$default_pwd --execute 'SHOW DATABASES;'"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  db-import:
    image: acore/ac-wotlk-db-import:7.0.0-dev.1
    user: $PUID:$PGID
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    environment:
      AC_LOGIN_DATABASE_INFO: "database;3306;root;$default_pwd;acore_auth"
      AC_WORLD_DATABASE_INFO: "database;3306;root;$default_pwd;acore_world"
      AC_CHARACTER_DATABASE_INFO: "database;3306;root;$default_pwd;acore_characters"
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - /DATA/AppData/$AppID/config:/azerothcore/env/dist/etc
      - /DATA/AppData/$AppID/logs:/azerothcore/env/dist/logs
    depends_on:
      database:
        condition: service_healthy
    restart: "no"

  client-data:
    image: acore/ac-wotlk-client-data:7.0.0-dev.1
    user: $PUID:$PGID
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - /DATA/AppData/$AppID/client-data:/azerothcore/env/dist/data
    restart: "no"

  authserver:
    image: acore/ac-wotlk-authserver:7.0.0-dev.1
    user: $PUID:$PGID
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    environment:
      AC_LOGIN_DATABASE_INFO: "database;3306;root;$default_pwd;acore_auth"
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - /DATA/AppData/$AppID/config:/azerothcore/env/dist/etc
      - /DATA/AppData/$AppID/logs:/azerothcore/env/dist/logs
    ports:
      - "3724:3724"
    depends_on:
      - database
      - db-import
    restart: unless-stopped

  worldserver:
    image: acore/ac-wotlk-worldserver:7.0.0-dev.1
    user: $PUID:$PGID
    stdin_open: true
    tty: true
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
    environment:
      AC_LOGIN_DATABASE_INFO: "database;3306;root;$default_pwd;acore_auth"
      AC_WORLD_DATABASE_INFO: "database;3306;root;$default_pwd;acore_world"
      AC_CHARACTER_DATABASE_INFO: "database;3306;root;$default_pwd;acore_characters"
      AC_DATA_DIR: "/azerothcore/env/dist/data"
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - /DATA/AppData/$AppID/config:/azerothcore/env/dist/etc
      - /DATA/AppData/$AppID/logs:/azerothcore/env/dist/logs
      - /DATA/AppData/$AppID/client-data:/azerothcore/env/dist/data:ro
    ports:
      - "8085:8085"
    expose:
      - 7878
    depends_on:
      - database
      - authserver
      - client-data
    restart: unless-stopped

  web-admin:
    image: nginx:1.25-alpine
    user: $PUID:$PGID
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    expose:
      - 80
    volumes:
      - /DATA/AppData/$AppID/web:/usr/share/nginx/html:ro
      - /DATA/AppData/$AppID/nginx-config:/etc/nginx/conf.d:ro
    depends_on:
      - worldserver
    restart: unless-stopped

x-casaos:
  main: web-admin
  webui_port: 80
  architectures:
    - amd64
    - arm64
  author: AzerothCore Team
  category: Games
  description:
    en_us: |
      AzerothCore는 World of Warcraft 3.3.5a (Wrath of the Lich King) 확장팩을 위한 완전 오픈소스 MMO 서버 에뮬레이터입니다.
      
      이 앱은 다음을 포함합니다:
      - MySQL 데이터베이스
      - 인증 서버 (포트 3724)
      - 월드 서버 (포트 8085)
      - 웹 관리 인터페이스
      - 자동 데이터베이스 초기화
      
      설치 후 월드서버 콘솔에 연결하여 계정을 생성하고 서버를 관리할 수 있습니다.
    ko_kr: |
      AzerothCore는 World of Warcraft 3.3.5a (Wrath of the Lich King) 확장팩을 위한 완전 오픈소스 MMO 서버 에뮬레이터입니다.
      
      이 앱은 다음을 포함합니다:
      - MySQL 데이터베이스
      - 인증 서버 (포트 3724)
      - 월드 서버 (포트 8085)
      - 웹 관리 인터페이스
      - 자동 데이터베이스 초기화
      
      설치 후 월드서버 콘솔에 연결하여 계정을 생성하고 서버를 관리할 수 있습니다.
  developer: AzerothCore
  icon: https://cdn.jsdelivr.net/gh/Yundera/AppStore@main/Apps/AzerothCore/icon.png
  tagline:
    en_us: Complete Open Source MMO Server Emulator for World of Warcraft 3.3.5a
    ko_kr: World of Warcraft 3.3.5a를 위한 완전 오픈소스 MMO 서버 에뮬레이터
  thumbnail: https://cdn.jsdelivr.net/gh/Yundera/AppStore@main/Apps/AzerothCore/thumbnail.png
  title:
    en_us: AzerothCore
    ko_kr: AzerothCore
  tips:
    before_install:
      en_us: |
        **Important Setup Information**
        
        **Database Credentials:**
        - Root Password: `$default_pwd`
        - Database User: `acore`
        - Database Password: `$default_pwd`
        
        **Server Ports:**
        - Authentication Server: 3724
        - World Server: 8085
        - Web Admin: HTTPS via NSL Router
        
        **First Time Setup:**
        1. Wait for database initialization (may take 10-15 minutes)
        2. Access web admin panel to monitor server status
        3. Connect to worldserver console: `docker attach <container_name>`
        4. Create admin account: `account create admin $default_pwd`
        5. Set GM level: `account set gmlevel admin 3 -1`
        6. Use CTRL+P then CTRL+Q to detach from console
        
        **Client Setup:**
        - You need a WoW 3.3.5a client
        - Edit realmlist.wtf to point to your server IP
        - Connect using port 3724
        
        **Note:** This is a complete WoW server that requires significant resources and a legitimate WoW client to connect.
      ko_kr: |
        **중요한 설정 정보**
        
        **데이터베이스 인증 정보:**
        - Root 비밀번호: `$default_pwd`
        - 데이터베이스 사용자: `acore`
        - 데이터베이스 비밀번호: `$default_pwd`
        
        **서버 포트:**
        - 인증 서버: 3724
        - 월드 서버: 8085
        - 웹 관리자: NSL Router를 통한 HTTPS
        
        **첫 설정:**
        1. 데이터베이스 초기화 대기 (10-15분 소요)
        2. 웹 관리 패널에서 서버 상태 확인
        3. 월드서버 콘솔 연결: `docker attach <container_name>`
        4. 관리자 계정 생성: `account create admin $default_pwd`
        5. GM 레벨 설정: `account set gmlevel admin 3 -1`
        6. CTRL+P 후 CTRL+Q로 콘솔에서 분리
        
        **클라이언트 설정:**
        - WoW 3.3.5a 클라이언트 필요
        - realmlist.wtf를 서버 IP로 수정
        - 포트 3724로 연결
        
        **참고:** 이는 상당한 리소스가 필요한 완전한 WoW 서버이며, 연결하려면 정품 WoW 클라이언트가 필요합니다.
  index: /
  pre-install-cmd: |
    mkdir -p /DATA/AppData/azerothcore/{config,logs,database,client-data,web,nginx-config,mysql-init} &&
    docker run --rm -v /DATA/AppData/azerothcore/web:/web alpine:3.19 sh -c "
      echo '<!DOCTYPE html>
      <html>
      <head>
          <title>AzerothCore Server Admin</title>
          <style>
              body { font-family: Arial, sans-serif; margin: 40px; background: #1a1a1a; color: #fff; }
              .container { max-width: 800px; margin: 0 auto; }
              .status { padding: 20px; background: #2d2d2d; border-radius: 8px; margin: 20px 0; }
              .button { display: inline-block; padding: 10px 20px; background: #007acc; color: white; text-decoration: none; border-radius: 4px; margin: 5px; }
              .warning { background: #ff6b35; padding: 15px; border-radius: 4px; margin: 20px 0; }
          </style>
      </head>
      <body>
          <div class=\"container\">
              <h1>🏰 AzerothCore Server Management</h1>
              <div class=\"warning\">
                  <strong>⚠️ First Time Setup Required</strong><br>
                  Server is initializing. This may take 10-15 minutes for the first startup.
              </div>
              <div class=\"status\">
                  <h3>📊 Server Status</h3>
                  <p><strong>Authentication Server:</strong> Port 3724</p>
                  <p><strong>World Server:</strong> Port 8085</p>
                  <p><strong>Database:</strong> MySQL 8.4</p>
                  <p><strong>Admin Password:</strong> Check your CasaOS dashboard</p>
              </div>
              <div class=\"status\">
                  <h3>🎮 Getting Started</h3>
                  <ol>
                      <li>Wait for complete initialization</li>
                      <li>Connect to worldserver console via SSH</li>
                      <li>Create your first admin account</li>
                      <li>Configure your WoW 3.3.5a client</li>
                      <li>Start playing!</li>
                  </ol>
              </div>
              <div class=\"status\">
                  <h3>📚 Console Commands</h3>
                  <p><code>account create &lt;username&gt; &lt;password&gt;</code> - Create account</p>
                  <p><code>account set gmlevel &lt;username&gt; 3 -1</code> - Set GM level</p>
                  <p><code>server info</code> - Show server information</p>
                  <p><code>server restart</code> - Restart world server</p>
              </div>
          </div>
      </body>
      </html>' > /web/index.html
    " &&
    docker run --rm -v /DATA/AppData/azerothcore/nginx-config:/config alpine:3.19 sh -c "
      echo 'server {
          listen 80;
          server_name localhost;
          root /usr/share/nginx/html;
          index index.html;
          
          location / {
              try_files \$uri \$uri/ =404;
          }
          
          location /health {
              access_log off;
              return 200 \"healthy\n\";
              add_header Content-Type text/plain;
          }
      }' > /config/default.conf
    " &&
    chown -R $PUID:$PGID /DATA/AppData/azerothcore/